@use "sass:math";

$spacing: 8px;

@mixin labelToTop {
    max-width: calc(133% - 32px);
    transform: translate(14px, -9px) scale(0.75);
    pointer-events: auto;
    user-select: none;
}

@mixin legendGoToLabel {
    max-width: 100%;
    -webkit-transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
    transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
}

.wrapper {
    align-items: center;
}

.container {
    position: relative;
    display: flex;
    align-items: center;
}

.container-input {
    width: 100%;
    display: flex;
    align-items: center;
}

.container.small {
    .container-input {
        font-size: 14px;
        line-height: 18px;
    }
}

.container.medium {
    .container-input {
        font-size: 14px;
        line-height: 24px;
    }
}

.container.large {
    .container-input {
        font-size: 16px;
        line-height: 28px;
    }
}

.variant {
    &-default {
        &::before {
            border-bottom: 2px solid var(--accent-color);
            left: 0;
            bottom: 0;
            content: "\00a0";
            position: absolute;
            right: 0;
            -webkit-transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
            transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
            pointer-events: none;
        }

        &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0px;
            z-index: 1;
            transform: scaleX(0);
            pointer-events: none;
            transition: transform 200ms cubic-bezier(0, 0, 0.2, 1);
            border-bottom: 2px solid var(--accent-color);
        }

        &.large {
            input {
                padding-top: 11px;
            }
        }

        &.medium {
            input {
                padding-top: 7px;
            }
        }

        &.small {
            input {
                padding-top: 5px;
            }
        }

        &.error {

            &::before,
            &::after {
                border-color: var(--red-dark-color);
            }
        }

        &:not(.disabled) {
            &:hover::before {
                border-width: 2px;
            }
        }

        &:has(input:focus) {
            &::after {
                transform: scaleX(1);
            }
        }

        &.label-static .label,
        input:focus~.label,
        &.not-empty .label {
            transform: translate(0, -12px) scale(0.7);
            pointer-events: auto;
            user-select: none;
        }
    }

    &-outline {
        input {
            border-radius: 24px;
            padding-inline: 10px;
        }

        .label {
            transform: translate(10px, 0px) scale(1);
        }

        &.large {
            input {
                padding-block: 6px;
            }

            &.label-static .label,
            input:focus~.label,
            &.not-empty .label {
                transform: translate(10px, -18px) scale(0.75);
                pointer-events: auto;
                user-select: none;
            }
        }

        &.medium {
            input {
                padding-block: 4px;
            }

            &.label-static .label,
            input:focus~.label,
            &.not-empty .label {
                transform: translate(10px, -13px) scale(0.75);
                pointer-events: auto;
                user-select: none;
            }
        }

        &.small {
            input {
                padding-block: 3px;
            }

            &.label-static .label,
            input:focus~.label,
            &.not-empty .label {
                transform: translate(10px, -10px) scale(0.75);
                pointer-events: auto;
                user-select: none;
            }
        }


        &.label-static .fieldset .legend,
        input:focus~.fieldset .legend,
        &.not-empty .fieldset .legend {
            max-width: 100%;
            -webkit-transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
            transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
        }

        .fieldset {
            border-color: var(--icon-color);
        }

        &:not(.disabled):not(.error):hover .fieldset {
            border-color: var(--accent-color);
        }

        input:focus~.fieldset,
        &.not-empty .fieldset {
            border-color: var(--accent-color);
        }
    }

    &-filled {
        background-color: rgba(0, 0, 0, 0.06);
        transition: background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;

        input {
            padding-inline: 3px;
        }

        &::before {
            border-bottom: 1px solid var(--icon-color);
            left: 0;
            bottom: 0;
            content: "\00a0";
            position: absolute;
            right: 0;
            -webkit-transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
            transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
            pointer-events: none;
        }

        &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0px;
            z-index: 1;
            transform: scaleX(0);
            pointer-events: none;
            transition: transform 200ms cubic-bezier(0, 0, 0.2, 1);
            border-bottom: 2px solid var(--icon-color);
        }

        &.large {
            input {
                padding-top: 11px;
            }
        }

        &.medium {
            input {
                padding-top: 7px;
            }
        }

        &.small {
            input {
                padding-top: 5px;
            }
        }

        &.error {

            &::before,
            &::after {
                border-color: var(--red-dark-color);
            }
        }

        &:not(.disabled):not(.error) {
            &:hover {
                background-color: rgba(0, 0, 0, 0.1);
            }

            &:hover::before {
                border-color: var(--accent-color);
            }
        }

        &:has(input:focus) {
            &::after {
                transform: scaleX(1);
                border-color: var(--accent-color);
            }
        }

        &.label-static .label,
        input:focus~.label,
        &.not-empty .label {
            transform: translate(0, -10px) scale(0.7);
            pointer-events: auto;
            user-select: none;
        }
    }
}

.error {

    .label,
    .fieldset {
        border-color: var(--red-dark-color);
        color: var(--red-dark-color);
    }
}

.fieldset {
    text-align: left;
    position: absolute;
    inset: -5px 0px 0px;
    margin: 0px;
    padding: 0px 6px;
    pointer-events: none;
    overflow: hidden;
    min-width: 0%;
    border-radius: 24px;
    border: 2px solid transparent;
    transition: border 200ms ease-in;
}

.legend {
    max-width: 0.01px;
    height: 11px;
    display: block;
    padding: 0px;

    float: unset;
    width: auto;
    overflow: hidden;
    font-size: 11px;
    visibility: hidden;
    transition: max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    white-space: nowrap;

    >span {
        padding-left: 6px;
        display: inline-block;
        opacity: 0;
        visibility: visible;
    }
}

.label {
    display: flex;
    color: var(--text-color);
    font-size: 14px;
    line-height: 1;

    position: absolute;
    transform-origin: left top;
    transition: color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms, transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
        max-width 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    pointer-events: none;
    cursor: text;

    &-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    &-star-required {
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        color: var(--red-dark-color);
        line-height: 0;
        margin-right: 0;
    }
}

.variant {

    &-filled,
    &-outline {
        .icon {
            &-right {
                padding-right: 6px;
            }

            &-left {
                padding-left: 6px;
            }
        }
    }
}



.not-empty {
    opacity: 1;
}

.error-message {
    color: var(--red-dark-color);
    font-size: 12px;
    line-height: 16px;
    margin-top: 4px;
}